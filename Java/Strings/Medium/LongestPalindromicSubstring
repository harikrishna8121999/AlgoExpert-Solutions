import java.util.*;

class Program {
  public static String longestPalindromicSubstring(String str) {
    // Write your code here.
    int n = str.length(), p1 = 0, p2 = 0, maxLen = 0;
    int sIdx = 0, eIdx = 0;

    for(int i =0;i<n;i++){
      p1 = i;
      p2 = p1;
      while(p1>=0 && p2<n && str.charAt(p1)==str.charAt(p2)){
        p1--;
        p2++;
      }
      int len = p2-p1-1;
      if(len > maxLen){
        maxLen = len;
        sIdx = p1+1;
        eIdx = p2-1;
      }
    }

    for(int i =0;i<n;i++){
      p1 = i;
      p2 = i+1;
      while(p1>=0 && p2<n && str.charAt(p1)==str.charAt(p2)){
        p1--;
        p2++;
      }
      int len = p2-p1-1;
      if(len > maxLen){
        maxLen = len;
        sIdx = p1+1;
        eIdx = p2-1;
      }
    }
    if(eIdx == n-1)
      return str.substring(sIdx);
    else
      return str.substring(sIdx, eIdx+1);


  }
}
